What happens when you initialize a repository? Why do you need to do it?

It adds a new directory .git to start storing all changes made to that repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

Staging area is the intermediate area between the working directory and the repository. You can easily add or remove files from there, but it gives the flexibility of adding multiple files per logical commit.

How can you use the staging area to make sure you have one commit per logical
change?

All the files that constitute one logical change can be added to the staging area, and then committed to the repository with just one commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

WHen you start working on a new release, but still need the code in the master which might be in production. OR you might have a team working on different features (might be experimental), so each of them could be working on their own branch.

How do the diagrams help you visualize the branch structure?

It helps to ensure that there are no commits which are detached. You can easily find out the commits from where the branch was created.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
